{
  "name" : "KNIME Workspace",
  "frequencies" : [ {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.looper.variable.start.LoopStartVariable3NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.rest.nodes.get.RestGetNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.column.renamer.ColumnRenamerNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.writer.ExcelTableWriterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.autobinner3.AutoBinnerLearnNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.ungroup.UngroupNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.datageneration.counter.CounterGenerationNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.ungroup.UngroupNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row2.RowSplitterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndDynamicNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.json.node.totable.JSONToTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.stringtonumber2.StringToNumber2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.osm.node.mapview.OsmMapViewNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "find correlated sunburst"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "unique flow variables"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Activate Categorical Analysis"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.io.tablecreator.TableCreator2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.reader.ExcelTableReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.mine.neural.mlp2.MLPPredictorNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.AggregateOutputNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.mine.scorer.accuracy.AccuracyScorer2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.ungroup.UngroupNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.io.filehandling.table.reader.KnimeTableReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.numbertostring2.NumberToString2NodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.normalize3.Normalizer3NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.XValidatePartitionerFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.mine.svm.predictor2.SVMPredictorNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.normalize3.Normalizer3NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.XValidatePartitionerFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.mine.svm.learner.SVMLearnerNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.table.splitter.TableSplitterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.table.cellupdater.CellUpdaterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row3.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.reader.ExcelTableReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.StringManipulationNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.flowvariable.variableloophead.LoopStartVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineVariableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaEditVarNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.filehandling.utility.nodes.stringtopath.variable.StringToPathVariableNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Activate Categorical Analysis"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariablesNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.io.tablecreator.TableCreator2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.correlation.compute.CorrelationComputeNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.js.base.node.widget.output.text.TextOutputWidgetNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.js.base.node.widget.output.text.TextOutputWidgetNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.js.base.node.widget.output.text.TextOutputWidgetNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.valuelookup.ValueLookupNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowagg.RowAggregatorNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Activate Numerical Analysis"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariablesNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.switches.startcase.StartcaseNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "count" : 5
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.stats.dataexplorer.DataExplorerNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row2.RowSplitterNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Report Missing Values"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeInputNodeFactory#Component Input"
    },
    "successor" : {
      "factoryId" : "org.knime.js.base.node.configuration.selection.column.ColumnSelectionDialogNodeFactory2"
    },
    "count" : 3
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.reader.ExcelTableReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.missingvaluecolfilter.MissingValueColumnFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Activate Categorical Analysis"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.io.tablecreator.TableCreator2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.chunk.LoopStartChunkNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.switches.manualif.ManualIfNodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Create a mapping from column to ML task."
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Filter constant categorical columns."
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.stats.testing.anova.OneWayANOVANodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "unique flow variables"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.reader.ExcelTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.StringManipulationNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.extractvariables.ExtractVariablesNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineVariableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowagg.RowAggregatorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.column.renamer.ColumnRenamerNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.util.extracttabledimension.ExtractTableDimensionNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.startcase.StartcaseNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.mine.svm.learner.SVMLearnerNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.ensembles.pmmlporttocell.PMMLPortToCellNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.database.extension.h2.node.connector.H2DBConnectorNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.database.node.io.reader.query.DBQueryReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeOutputNodeFactory#Component Output"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.time.node.convert.stringtodatetime.StringToDateTimeNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.time.node.extract.datetime.ExtractDateTimeFieldsNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.views.node.statistics.StatisticsNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeInputNodeFactory#Component Input"
    },
    "node" : {
      "factoryId" : "org.knime.js.base.node.viz.pagedTable.PagedTableViewNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "count" : 6
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row3.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.ensembles.tabletopmmlport.TableToPMMLNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.io.filehandling.pmml.writer.PMMLWriterNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.domain.dialog2.DomainNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rounddouble.RoundDoubleNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.domain.editnumeric.EditNumericDomainNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Activate Categorical Analysis"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "find correlated categorical with encoded numerical"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "count" : 8
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.mongodb2.read.MongoDB2ReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.json.node.totable.JSONToTableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.columnrenameregex.ColumnRenameRegexNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.cellsplit2.CellSplitter2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.matcher.SubsetMatcherNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Top 2 Rules"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "unique flow variables"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.normalize3.Normalizer3NodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Apply the model on all data"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.matcher.SubsetMatcherNodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Top 2 Rules"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Refine"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row3.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ensembles.tabletopmmlport.TableToPMMLNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeInputNodeFactory#Component Input"
    },
    "successor" : {
      "factoryId" : "org.knime.js.base.node.configuration.filter.column.ColumnFilterDialogNodeFactory2"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.StringManipulationNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Constant Value Test"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.datageneration.counter.CounterGenerationNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.js.base.node.configuration.filter.column.ColumnFilterDialogNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.columnheaderextract.ColumnHeaderExtractorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.pmml.normalize.NormalizerPMMLNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.mine.cluster.kmeans.ClusterNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.pmml.normalize.NormalizerPMMLDeNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.mongodb2.read.MongoDB2ReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.json.node.totable.JSONToTableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable3.TableToVariable3NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariables2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.database.node.io.reader.query.DBQueryReaderNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.endif.EndifNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.json.node.tojson.ColumnsToJsonNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.reader.ExcelTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.numbertostring2.NumberToString2NodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.stats.dataexplorer.DataExplorerNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row2.RowSplitterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.regexsplit.RegexSplitNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "find leptokurtic histogram"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.itemset.nodes.learner.AssociationRuleLearnerNodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Ungroup collections"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.io.filehandling.table.writer.TableWriterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factory" : "MetaNode",
      "name" : "Constant Value Test"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaSnippetNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaSnippetNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilter2PortNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilter2PortNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.js.base.node.configuration.input.dbl.DoubleDialogNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.ext.itemset.nodes.learner.AssociationRuleLearnerNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Ungroup collections"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.autobinner3.AutoBinnerLearnNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.variabletotablerow2.VariableToTable2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.database.extension.h2.node.connector.H2DBConnectorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.database.node.io.reader.query.DBQueryReaderNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariables2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.database.node.io.reader.query.DBQueryReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeOutputNodeFactory#Component Output"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row3.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.table.cropper.TableCropperNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.js.base.node.configuration.input.string.StringDialogNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable3.TableToVariable3NodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "missing values check"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row3.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.io.tablecreator.TableCreator2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.io.tablecreator.TableCreator2NodeFactory"
    },
    "count" : 7
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "missing values check"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaSnippetNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilter2PortNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.numbertostring2.NumberToString2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.partition.PartitionNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.learner2.DecisionTreeLearnerNodeFactory3"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.numbertostring.NumberToStringNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.numbertostring2.NumberToString2NodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Document Creation and document pre-processing"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.textprocessing.nodes.mining.topic.ParallelTopicExtractorNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.startcase.StartcaseNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.json.node.jsonpath.multi.JSONPathNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndDynamicNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariablesNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.injectvariables.InjectVariablesNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "ANOVA tests"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.XValidatePartitionerFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.mine.neural.mlp2.MLPPredictorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.AggregateOutputNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.js.base.node.configuration.input.bool.BooleanDialogNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.js.base.node.configuration.selection.column.ColumnSelectionDialogNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowagg.RowAggregatorNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.column.renamer.ColumnRenamerNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend2.ColumnAppender2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowtocolumnheader.RowToColumnHeaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.table.splitter.TableSplitterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.table.cellextractor.CellExtractorNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.StringManipulationNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "count" : 5
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Activate Numerical Analysis"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariablesNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.injectvariables.InjectVariablesNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndJoin2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.io.filehandling.table.reader.KnimeTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.cellsplit2.CellSplitter2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.itemset.nodes.learner.AssociationRuleLearnerNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.autobinner3.AutoBinnerLearnNodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "find correlated categorical with encoded numerical"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.AggregateOutputNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.mine.scorer.accuracy.AccuracyScorer2NodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Creation of a table with accuracy and model type (SVM)"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.flowcontrol.trycatch.genericcatch.DataPortCatchNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.normalize3.Normalizer3NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.XValidatePartitionerFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.mine.neural.rprop.RPropNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.ungroup.UngroupNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "count" : 9
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.io.tablecreator.TableCreator2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowcontrol.trycatch.genericcatch.DataPortCatchNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.mine.scorer.accuracy.AccuracyScorer2NodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Creation of a table with accuracy and model type (Neural Network)"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.crossjoin.CrossJoinerNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.io.tablecreator.TableCreator2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.columnaggregator.ColumnAggregatorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Activate Categorical Analysis"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "find correlated sunburst"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.pmml.missingval.compute.MissingValueHandlerNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Activate Categorical Analysis"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "encode categorical columns into numerical"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "find correlated encoded categorical with numerical"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeInputNodeFactory#Component Input"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.util.extracttabledimension.ExtractTableDimensionNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.stringtonumber.StringToNumberNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.missingvaluecolfilter.MissingValueColumnFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.injectvariables.InjectVariablesNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowtocolumnheader.RowToColumnHeaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.table.splitter.TableSplitterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.table.cellupdater.CellUpdaterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.table.cropper.TableCropperNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.datageneration.counter.CounterGenerationNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowcontrol.trycatch.generictry.DataPortTryNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "ANOVA"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.io.filehandling.table.reader.KnimeTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.valuelookup.ValueLookupNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "missing values check"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaSnippetNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.domain.dialog2.DomainNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.pmml.missingval.compute.MissingValueHandlerNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineFilterNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.normalize3.Normalizer3NodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Apply the model on all data"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.crossjoin.CrossJoinerNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.categorytonumber2.CategoryToNumberNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.valuelookup.ValueLookupNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.column.renamer.ColumnRenamerNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Count distinct values"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.dynamic.js.v30.DynamicJSNodeFactory#Bar Chart (JavaScript)"
    },
    "node" : {
      "factoryId" : "org.knime.js.base.node.widget.output.text.TextOutputWidgetNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.js.base.node.widget.output.text.TextOutputWidgetNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row3.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.duplicates.DuplicateRowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.views.node.piechart.PieChartNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.json.node.jsonpath.multi.JSONPathNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndDynamicNodeFactory"
    },
    "successor" : {
      "factory" : "SubNode",
      "name" : "Join Between"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Activate Numerical Analysis"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.io.tablecreator.TableCreator2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.StringManipulationNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeInputNodeFactory#Component Input"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.stats.dataexplorer.DataExplorerNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeOutputNodeFactory#Component Output"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowagg.RowAggregatorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend2.ColumnAppender2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.injectvariables.InjectVariablesNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.cellreplace.CellReplacerNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndJoin2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "ANOVA"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowcontrol.trycatch.genericcatch.DataPortCatchNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.io.tablecreator.TableCreator2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.cellsplit2.CellSplitter2NodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Total Price of current Basket"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.correlation.compute.CorrelationComputeNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.StringManipulationNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable3.TableToVariable3NodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.columnrenameregex.ColumnRenameRegexNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.stats.viz.extended.ExtendedStatisticsNodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "find skewed histogram"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.datageneration.counter.CounterGenerationNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.StringManipulationNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.domain.dialog2.DomainNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.reader.ExcelTableReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.ungroup.UngroupNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.valuelookup.ValueLookupNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Train and Cross Validate a SVM"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.reader.ExcelTableReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowtocolumnheader.RowToColumnHeaderNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.stringtonumber2.StringToNumber2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.valuelookup.ValueLookupNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowagg.RowAggregatorNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.correlation.compute.CorrelationComputeNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.partition.PartitionNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.learner2.DecisionTreeLearnerNodeFactory3"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable3.TableToVariable3NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeOutputNodeFactory#Component Output"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.switches.manualif.ManualIfNodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Filter constant categorical columns."
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endif.EndifNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "count" : 8
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.js.base.node.configuration.input.dbl.DoubleDialogNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.itemset.nodes.learner.AssociationRuleLearnerNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Activate Categorical Analysis"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "find correlated categorical with encoded numerical"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeInputNodeFactory#Component Input"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.startcase.StartcaseNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Activate Numerical Analysis"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariablesNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.io.tablecreator.TableCreator2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.stringreplacer.StringReplacerNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.stats.dataexplorer.DataExplorerNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row2.RowSplitterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.columnaggregator.ColumnAggregatorNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaSnippetNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.valuelookup.ValueLookupNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.io.filehandling.table.reader.KnimeTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.numbertostring2.NumberToString2NodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Ungroup collections"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "find correlated sunburst"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "unique flow variables"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Top 2 Rules"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Refine"
    },
    "successor" : {
      "factoryId" : "org.knime.base.views.node.tableview.TableViewNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.variableloophead.LoopStartVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.duplicates.DuplicateRowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowagg.RowAggregatorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend2.ColumnAppender2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.injectvariables.InjectVariablesNodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeInputNodeFactory#Component Input"
    },
    "successor" : {
      "factoryId" : "org.knime.js.base.node.css.editor.CSSEditorNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.database.extension.h2.node.connector.H2DBConnectorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.database.node.io.write.DBWriteNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend2.ColumnAppender2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.writer.ExcelTableWriterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.time.node.convert.stringtodatetime.StringToDateTimeNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.time.node.extract.datetime.ExtractDateTimeFieldsNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.views.node.lineplot.LinePlotNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "ID/Noise Test & Missing Value Test"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Overall Column Relevance"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeInputNodeFactory#Component Input"
    },
    "node" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.dynamic.js.v30.DynamicJSNodeFactory#Bar Chart (JavaScript)"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factory" : "MetaNode",
      "name" : "Product Infos / Association Rules"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Total Price of current Basket"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.column.renamer.ColumnRenamerNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.cellsplit2.CellSplitter2NodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Total Price of current Basket"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Refine"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.util.extracttabledimension.ExtractTableDimensionNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Activate Numerical Analysis"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "find spikey histogram"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeInputNodeFactory#Component Input"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.stats.dataexplorer.DataExplorerNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.ungroup.UngroupNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.textprocessing.nodes.preprocessing.ncharsfilter.NCharsFilterNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.ext.textprocessing.nodes.preprocessing.stopwordfilter.StopWordFilterNodeFactory3"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.textprocessing.nodes.preprocessing.caseconverter.CaseConverterNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowagg.RowAggregatorNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.valuelookup.ValueLookupNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.column.renamer.ColumnRenamerNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.mongodb2.connection.node.MongoDBConnectorNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.mongodb2.read.MongoDB2ReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.json.node.totable.JSONToTableNodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.XValidatePartitionerFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.mine.svm.learner.SVMLearnerNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.mine.svm.predictor2.SVMPredictorNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.mongodb2.read.MongoDB2ReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.json.node.totable.JSONToTableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.stringtonumber2.StringToNumber2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Activate Categorical Analysis"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariablesNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.missingvaluecolfilter.MissingValueColumnFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.util.extracttabledimension.ExtractTableDimensionNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.categorytonumber2.CategoryToNumberNodeFactory2"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Train and Cross Validate a Neural Network"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.ungroup.UngroupNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row2.RowSplitterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.regexsplit.RegexSplitNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row2.RowSplitterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.datageneration.counter.CounterGenerationNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factory" : "MetaNode",
      "name" : "Product Infos / Association Rules"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.matcher.SubsetMatcherNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Activate Numerical Analysis"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "find correlated scatter plots"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.StringManipulationNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.numbertostring.NumberToStringNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Activate Numerical Analysis"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.io.tablecreator.TableCreator2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.mine.svm.predictor2.SVMPredictorNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.AggregateOutputNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.mine.scorer.accuracy.AccuracyScorer2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.correlation.compute.CorrelationComputeNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "find high correlation"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.partition.PartitionNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.learner2.DecisionTreeLearnerNodeFactory3"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.io.filehandling.pmml.writer.PMMLWriterNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.categorytonumber2.CategoryToNumberNodeFactory2"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Train and Cross Validate a SVM"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Verify Locations Status"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row3.RowSplitterNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Report Missing Values"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend2.ColumnAppender2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.column.renamer.ColumnRenamerNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.writer.ExcelTableWriterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.reader.ExcelTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.columnmerge.ColumnMergerNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.stringtonumber2.StringToNumber2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.datageneration.counter.CounterGenerationNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowcontrol.trycatch.generictry.DataPortTryNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.table.cropper.TableCropperNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowagg.RowAggregatorNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaSnippetNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.io.tablecreator.TableCreator2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowcontrol.trycatch.genericcatch.DataPortCatchNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.flowcontrol.trycatch.generictry.DataPortTryNodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "ANOVA"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowcontrol.trycatch.genericcatch.DataPortCatchNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.rest.nodes.get.RestGetNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaSnippetNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.json.node.jsonpath.multi.JSONPathNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row3.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "missing values check"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaSnippetNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.ungroup.UngroupNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row3.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.duplicates.DuplicateRowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.views.node.stackedareachart.StackedAreaChartNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.startcase.StartcaseNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row3.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.reader.ExcelTableReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Activate Numerical Analysis"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.stats.viz.extended.ExtendedStatisticsNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "find leptokurtic histogram"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.stringreplacer.StringReplacerNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.stats.dataexplorer.DataExplorerNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndJoin2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.numbertostring2.NumberToString2NodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Document Creation and document pre-processing"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.AggregateOutputNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.mine.scorer.accuracy.AccuracyScorer2NodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Creation of a table with accuracy and model type (decision tree)"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.valuelookup.ValueLookupNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.pmml.missingval.compute.MissingValueHandlerNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.views.node.barchart.BarChartNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.reader.ExcelTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.views.node.barchart.BarChartNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndJoin2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.cellreplace.CellReplacerNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndJoin2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.ungroup.UngroupNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.ungroup.UngroupNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeInputNodeFactory#Component Input"
    },
    "node" : {
      "factoryId" : "org.knime.js.base.node.configuration.selection.column.ColumnSelectionDialogNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariables2NodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.table.cellupdater.CellUpdaterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row3.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Count missing values"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.partition.PartitionNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.domain.dialog2.DomainNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.injectvariables.InjectVariablesNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.io.filehandling.table.reader.KnimeTableReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.cellsplit2.CellSplitter2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Activate Categorical Analysis"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "find correlated sunburst"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.io.tablecreator.TableCreator2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.cellsplit2.CellSplitter2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Activate Numerical Analysis"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.stats.viz.extended.ExtendedStatisticsNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "find skewed histogram"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.io.tablecreator.TableCreator2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.cellsplit2.CellSplitter2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.matcher.SubsetMatcherNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.views.node.barchart.BarChartNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Count distinct values"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.datageneration.counter.CounterGenerationNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.util.extracttabledimension.ExtractTableDimensionNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "SubNode",
      "name" : "Row Count"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaEditVarNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.manualif.ManualIfNodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.regexsplit.RegexSplitNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row2.RowSplitterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.time.node.convert.stringtodatetime.StringToDateTimeNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.time.node.extract.datetime.ExtractDateTimeFieldsNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.views.node.piechart.PieChartNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ensembles.pmmlpredict3.PMMLPredictorNodeFactory3"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.partition.PartitionNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.predictor2.DecTreePredictorNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilter2PortNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.cellreplace.CellReplacerNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.valcount.ValueCounterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaEditVarNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.manualif.ManualIfNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.partition.PartitionNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.flowvariable.variabletotablerow2.VariableToTable2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.domain.dialog2.DomainNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.pmml.missingval.compute.MissingValueHandlerNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.stringtonumber.StringToNumberNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.table.cellextractor.CellExtractorNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.table.cellupdater.CellUpdaterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row3.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.variableloophead.LoopStartVariableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.mongodb2.connection.node.MongoDBConnectorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.mongodb2.read.MongoDB2ReaderNodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.categorytonumber2.CategoryToNumberNodeFactory2"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Train and Cross Validate a Neural Network"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.column.renamer.ColumnRenamerNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.numbertostring.NumberToStringNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.column.renamer.ColumnRenamerNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "find skewed histogram"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.variableloophead.LoopStartVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineVariableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 8
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Activate Categorical Analysis"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "find correlated sunburst"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "unique flow variables"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineVariableNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.partition.PartitionNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.domain.dialog2.DomainNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaSnippetNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.json.node.jsonpath.multi.JSONPathNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndDynamicNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.numbertostring.NumberToStringNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.table.splitter.TableSplitterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.table.cellextractor.CellExtractorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.table.cellupdater.CellUpdaterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.util.extracttabledimension.ExtractTableDimensionNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable3.TableToVariable3NodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.mine.svm.learner.SVMLearnerNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.mine.svm.predictor2.SVMPredictorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.AggregateOutputNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Activate Numerical Analysis"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "find correlated categorical with encoded numerical"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.dynamic.js.v30.DynamicJSNodeFactory#Bar Chart (JavaScript)"
    },
    "successor" : {
      "factoryId" : "org.knime.js.base.node.widget.output.text.TextOutputWidgetNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Activate Numerical Analysis"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "find correlated encoded categorical with numerical"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "select numericals"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.valcount.ValueCounterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Count distinct values"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.io.tablecreator.TableCreator2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariables2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariables2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.database.node.io.reader.query.DBQueryReaderNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.partition.PartitionNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Calculate feature qualitiy metrics."
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.util.extracttabledimension.ExtractTableDimensionNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Activate Categorical Analysis"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariablesNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.injectvariables.InjectVariablesNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.js.base.node.configuration.input.string.StringDialogNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.StringManipulationNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.learner2.DecisionTreeLearnerNodeFactory3"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.predictor2.DecTreePredictorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.views.node.scatterplot.ScatterPlotNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowagg.RowAggregatorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.valuelookup.ValueLookupNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Create a mapping from column to ML task."
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Filter constant categorical columns."
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endif.EndifNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.switches.manualif.ManualIfNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.writer.ExcelTableWriterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.filehandling.utility.nodes.pathtostring.variable.PathToStringVariableNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "unique flow variables"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.learner2.DecisionTreeLearnerNodeFactory3"
    },
    "node" : {
      "factoryId" : "org.knime.ensembles.pmmlporttocell.PMMLPortToCellNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "find spikey histogram"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "unique flow variables"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.stringtonumber.StringToNumberNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.missingvaluecolfilter.MissingValueColumnFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Product Infos / Association Rules"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Total Price of current Basket"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Refine"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.numbertostring2.NumberToString2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.pmml.normalize.NormalizerPMMLNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.manualif.ManualIfNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Filter constant categorical columns."
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rounddouble.RoundDoubleNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowagg.RowAggregatorNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend2.ColumnAppender2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.column.renamer.ColumnRenamerNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "select binomials"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.partition.PartitionNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.predictor2.DecTreePredictorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.views.node.scatterplot.ScatterPlotNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.partition.PartitionNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.js.base.node.quickform.input.date2.DateInput2QuickFormNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaEditVarNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "find correlated sunburst"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.datageneration.counter.CounterGenerationNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Train and Cross Validate a Neural Network"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.XValidatePartitionerFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.predictor2.DecTreePredictorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.AggregateOutputNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.stats.testing.anova.OneWayANOVANodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.writer.ExcelTableWriterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.filehandling.utility.nodes.pathtostring.variable.PathToStringVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.util.sendmail.SendMailNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : null,
    "node" : {
      "factory" : "MetaNode",
      "name" : "select binomials"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariables2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariables2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariables2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.io.filehandling.table.reader.KnimeTableReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.valuelookup.ValueLookupNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndJoin2NodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.domain.dialog2.DomainNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factory" : "SubNode",
      "name" : "Row Count"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaEditVarNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.ungroup.UngroupNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.ext.textprocessing.nodes.preprocessing.puncterasure.PunctuationErasureNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.textprocessing.nodes.preprocessing.numberfilter.NumberFilterNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Activate Numerical Analysis"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.stats.viz.extended.ExtendedStatisticsNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 5
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.valcount.ValueCounterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.pmml.missingval.compute.MissingValueHandlerNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Verify Locations Status"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row3.RowSplitterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaSnippetNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.ungroup.UngroupNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.filehandling.utility.nodes.stringtopath.variable.StringToPathVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.writer.ExcelTableWriterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.filehandling.utility.nodes.pathtostring.variable.PathToStringVariableNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariablesNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.io.tablecreator.TableCreator2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.mine.neural.rprop.RPropNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.ensembles.pmmlporttocell.PMMLPortToCellNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.js.base.node.configuration.selection.column.ColumnSelectionDialogNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariables2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariables2NodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "spike test"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factory" : "MetaNode",
      "name" : "select numericals"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.numbertostring2.NumberToString2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.partition.PartitionNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilter2PortNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Activate Numerical Analysis"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "find spikey histogram"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.database.extension.sqlite.node.connector.SQLiteDBConnectorNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.database.node.io.reader.query.DBQueryReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.flowvariable.variableloophead.LoopStartVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.js.base.node.configuration.input.bool.BooleanDialogNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndJoin2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.datageneration.counter.CounterGenerationNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.StringManipulationNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.mongodb2.connection.node.MongoDBConnectorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.mongodb2.write.MongoDB2WriterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.partition.PartitionNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.datageneration.counter.CounterGenerationNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.database.extension.sqlite.node.connector.SQLiteDBConnectorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.database.node.io.reader.query.DBQueryReaderNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.numbertostring.NumberToStringNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.table.cropper.TableCropperNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend2.ColumnAppender2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.rest.nodes.get.RestGetNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaSnippetNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.util.extracttabledimension.ExtractTableDimensionNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineVariableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.cellreplace.CellReplacerNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Activate Numerical Analysis"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.autobinner3.AutoBinnerLearnNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "find correlated categorical with encoded numerical"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row3.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 8
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.column.renamer.ColumnRenamerNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Activate Numerical Analysis"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "find correlated categorical with encoded numerical"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.util.extracttabledimension.ExtractTableDimensionNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.table.splitter.TableSplitterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.table.cropper.TableCropperNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Count missing values"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.mine.svm.learner.SVMLearnerNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.ensembles.pmmlporttocell.PMMLPortToCellNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.time.node.convert.stringtodatetime.StringToDateTimeNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.time.node.extract.datetime.ExtractDateTimeFieldsNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.cellsplit2.CellSplitter2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.ext.itemset.nodes.learner.AssociationRuleLearnerNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Ungroup collections"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.manualif.ManualIfNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Create a mapping from column to ML task."
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factory" : "MetaNode",
      "name" : "ID/Noise Test & Missing Value Test"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.pmml.missingval.compute.MissingValueHandlerNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilter2PortNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.util.extracttabledimension.ExtractTableDimensionNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.cellreplace.CellReplacerNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndJoin2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Train and Cross Validate a Decision Tree"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.normalize3.Normalizer3NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.XValidatePartitionerFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.reader.ExcelTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowagg.RowAggregatorNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.partition.PartitionNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Activate Categorical Analysis"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.startcase.StartcaseNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowcontrol.breakpoint.BreakpointNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.autobinner3.AutoBinnerLearnNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "missing values check"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "find high correlation"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilter2PortNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.missingvaluecolfilter.MissingValueColumnFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.textprocessing.nodes.preprocessing.puncterasure.PunctuationErasureNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.ext.textprocessing.nodes.preprocessing.numberfilter.NumberFilterNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.textprocessing.nodes.preprocessing.ncharsfilter.NCharsFilterNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Overall Column Relevance"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.missingvaluecolfilter.MissingValueColumnFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.injectvariables.InjectVariablesNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.io.tablecreator.TableCreator2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row3.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.duplicates.DuplicateRowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.mine.scorer.accuracy.AccuracyScorer2NodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Creation of a table with accuracy and model type (SVM)"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.crossjoin.CrossJoinerNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.util.extracttabledimension.ExtractTableDimensionNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.io.tablecreator.TableCreator2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaSnippetNodeFactory"
    },
    "count" : 5
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.columnresorter.ColumnResorterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.jep.multicolumn.MultiColumnJEPNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "find correlated scatter plots"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "unique flow variables"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable3.TableToVariable3NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariables2NodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilter2PortNodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.duplicates.DuplicateRowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowagg.RowAggregatorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.valuelookup.ValueLookupNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Product Infos / Association Rules"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.matcher.SubsetMatcherNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Top 2 Rules"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "count" : 13
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factory" : "MetaNode",
      "name" : "Apply the model on all data"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.crossjoin.CrossJoinerNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.switches.startcase.StartcaseNodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Feature Quality Calculation"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Detect Visualizations"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.datageneration.counter.CounterGenerationNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.numbertostring2.NumberToString2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.pmml.normalize.NormalizerPMMLNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.mine.cluster.kmeans.ClusterNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.js.base.node.configuration.selection.column.ColumnSelectionDialogNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariables2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "encode categorical columns into numerical"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "find correlated encoded categorical with numerical"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.database.extension.h2.node.connector.H2DBConnectorNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.database.node.io.write.DBWriteNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariables2NodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "ID/Noise Test & Missing Value Test"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.numbertostring.NumberToStringNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.XValidatePartitionerFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.learner2.DecisionTreeLearnerNodeFactory3"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.datageneration.counter.CounterGenerationNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Total Price of current Basket"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Refine"
    },
    "successor" : {
      "factoryId" : "org.knime.base.views.node.tableview.TableViewNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.switches.manualif.ManualIfNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.endif.EndifNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.json.node.tojson.ColumnsToJsonNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.correlation.compute.CorrelationComputeNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.learner2.DecisionTreeLearnerNodeFactory3"
    },
    "successor" : {
      "factoryId" : "org.knime.ensembles.pmmlporttocell.PMMLPortToCellNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.AggregateOutputNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.mine.scorer.accuracy.AccuracyScorer2NodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Creation of a table with accuracy and model type (Neural Network)"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.switches.endif.EndifNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.json.node.tojson.ColumnsToJsonNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.mongodb2.write.MongoDB2WriterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.pmml.missingval.compute.MissingValueHandlerNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.numbertostring2.NumberToString2NodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowtocolumnheader.RowToColumnHeaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.table.splitter.TableSplitterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.columnresorter.ColumnResorterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Activate Categorical Analysis"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "encode categorical columns into numerical"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndJoin2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.datageneration.counter.CounterGenerationNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.partition.PartitionNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.predictor2.DecTreePredictorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.mine.scorer.accuracy.AccuracyScorer2NodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.jep.multicolumn.MultiColumnJEPNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rounddouble.RoundDoubleNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.stats.viz.extended.ExtendedStatisticsNodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "find leptokurtic histogram"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.startcase.StartcaseNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Document Creation and document pre-processing"
    },
    "node" : {
      "factoryId" : "org.knime.ext.textprocessing.nodes.mining.topic.ParallelTopicExtractorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilter2PortNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "count" : 5
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.ungroup.UngroupNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Overall Column Relevance"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Activate Numerical Analysis"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "find correlated scatter plots"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Activate Numerical Analysis"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Activate Numerical Analysis"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "find correlated encoded categorical with numerical"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.XValidatePartitionerFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.predictor2.DecTreePredictorNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.learner2.DecisionTreeLearnerNodeFactory3"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.predictor2.DecTreePredictorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.mine.scorer.accuracy.AccuracyScorer2NodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaEditVarNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.manualif.ManualIfNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endif.EndifNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndDynamicNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Insert to MongoDB"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.partition.PartitionNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.columnaggregator.ColumnAggregatorNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.missingvaluecolfilter.MissingValueColumnFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.correlation.compute.CorrelationComputeNodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "find high correlation"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilter2PortNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.column.renamer.ColumnRenamerNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.duplicates.DuplicateRowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowagg.RowAggregatorNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.datageneration.counter.CounterGenerationNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.database.node.io.reader.query.DBQueryReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.json.node.totable.JSONToTableNodeFactory"
    },
    "node" : {
      "factory" : "SubNode",
      "name" : "Row Count"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaEditVarNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "find high correlation"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.database.node.io.write.DBWriteNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariables2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariables2NodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "find correlated categorical with encoded numerical"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.column.renamer.ColumnRenamerNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.reader.ExcelTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.flowvariable.extractvariables.ExtractVariablesNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.manualif.ManualIfNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.mine.neural.rprop.RPropNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.mine.neural.mlp2.MLPPredictorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.AggregateOutputNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.stringreplacer.StringReplacerNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowcontrol.trycatch.generictry.DataPortTryNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeInputNodeFactory#Component Input"
    },
    "node" : {
      "factoryId" : "org.knime.database.node.io.write.DBWriteNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.util.mergevariables.MergeVariables2NodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.variableloophead.LoopStartVariableNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.mine.scorer.accuracy.AccuracyScorer2NodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Creation of a table with accuracy and model type (decision tree)"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.crossjoin.CrossJoinerNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.partition.PartitionNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.learner2.DecisionTreeLearnerNodeFactory3"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.predictor2.DecTreePredictorNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.database.extension.h2.node.connector.H2DBConnectorNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.XValidatePartitionerFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.mine.neural.rprop.RPropNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.mine.neural.mlp2.MLPPredictorNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.variableloophead.LoopStartVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.looper.chunk.LoopStartChunkNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.missingvaluecolfilter.MissingValueColumnFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Constant Value Test"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Overall Column Relevance"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.XValidatePartitionerFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.learner2.DecisionTreeLearnerNodeFactory3"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.predictor2.DecTreePredictorNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.datageneration.counter.CounterGenerationNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "unique flow variables"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "find high correlation"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilter2PortNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.numbertostring2.NumberToString2NodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Ungroup collections"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.io.filehandling.table.writer.TableWriterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.reader.ExcelTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.duplicates.DuplicateRowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.looper.variable.start.LoopStartVariable3NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.json.node.jsonpath.multi.JSONPathNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeInputNodeFactory#Component Input"
    },
    "successor" : {
      "factoryId" : "org.knime.js.base.node.viz.pagedTable.PagedTableViewNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "find correlated scatter plots"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaEditVarNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.manualif.ManualIfNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.writer.ExcelTableWriterNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.columnresorter.ColumnResorterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.ext.jep.multicolumn.MultiColumnJEPNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row3.RowSplitterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndDynamicNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.normalize3.Normalizer3NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.XValidatePartitionerFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.mine.neural.mlp2.MLPPredictorNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.reader.ExcelTableReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.columnmerge.ColumnMergerNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.missingvaluecolfilter.MissingValueColumnFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "spike test"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.datageneration.counter.CounterGenerationNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.columnheaderextract.ColumnHeaderExtractorNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.StringManipulationNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.js.base.node.css.editor.CSSEditorNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.js.base.node.viz.pagedTable.PagedTableViewNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeInputNodeFactory#Component Input"
    },
    "node" : {
      "factoryId" : "org.knime.js.base.node.css.editor.CSSEditorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.js.base.node.viz.pagedTable.PagedTableViewNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row2.RowSplitterNodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Verify Locations Status"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row3.RowSplitterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.io.tablecreator.TableCreator2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "count" : 7
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.numbertostring2.NumberToString2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.partition.PartitionNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.predictor2.DecTreePredictorNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row3.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.numbertostring2.NumberToString2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.pmml.normalize.NormalizerPMMLNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.pmml.normalize.NormalizerPMMLDeNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilter2PortNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.time.node.convert.stringtodatetime.StringToDateTimeNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.time.node.extract.datetime.ExtractDateTimeFieldsNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.views.node.heatmap.HeatmapNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.json.node.totable.JSONToTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endif.EndifNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.XValidatePartitionerFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.mine.svm.predictor2.SVMPredictorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.AggregateOutputNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.categorytonumber2.CategoryToNumberNodeFactory2"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Train and Cross Validate a SVM"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.stats.viz.extended.ExtendedStatisticsNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeInputNodeFactory#Component Input"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.util.extracttabledimension.ExtractTableDimensionNodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.pmml.missingval.compute.MissingValueHandlerNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.stringtonumber.StringToNumberNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.missingvaluecolfilter.MissingValueColumnFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Train and Cross Validate a Decision Tree"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.ext.textprocessing.nodes.transformation.stringstodocument.StringsToDocumentNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.textprocessing.nodes.preprocessing.numberfilter.NumberFilterNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.ext.textprocessing.nodes.preprocessing.ncharsfilter.NCharsFilterNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.textprocessing.nodes.preprocessing.stopwordfilter.StopWordFilterNodeFactory3"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.numbertostring2.NumberToString2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.regexsplit.RegexSplitNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row2.RowSplitterNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Verify Locations Status"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.util.extracttablespec.ExtractTableSpecNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaSnippetNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.valcount.ValueCounterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Count missing values"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeInputNodeFactory#Component Input"
    },
    "successor" : {
      "factoryId" : "org.knime.database.node.io.write.DBWriteNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaSnippetNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 3
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.StringManipulationNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "find correlated encoded categorical with numerical"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.looper.chunk.LoopStartChunkNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.looper.chunk.LoopStartChunkNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.missingvaluecolfilter.MissingValueColumnFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.chunk.LoopStartChunkNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.missingvaluecolfilter.MissingValueColumnFilterNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.mine.neural.rprop.RPropNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.ensembles.pmmlporttocell.PMMLPortToCellNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.learner2.DecisionTreeLearnerNodeFactory3"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.predictor2.DecTreePredictorNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.AggregateOutputNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.columnref.ColumnFilterRefNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.numbertostring.NumberToStringNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.chunk.LoopStartChunkNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.cellreplace.CellReplacerNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Train and Cross Validate a Decision Tree"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.variable.start.LoopStartVariable3NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.datageneration.counter.CounterGenerationNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.util.extracttabledimension.ExtractTableDimensionNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.switches.manualif.ManualIfNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endif.EndifNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.stringtonumber.StringToNumberNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.missingvaluecolfilter.MissingValueColumnFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.startcase.StartcaseNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Feature Quality Calculation"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.domain.dialog2.DomainNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.flowvariable.injectvariables.InjectVariablesNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "ANOVA tests"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.flowvariable.injectvariables.InjectVariablesNodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "ANOVA tests"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.mongodb2.read.MongoDB2ReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.json.node.totable.JSONToTableNodeFactory"
    },
    "successor" : {
      "factory" : "SubNode",
      "name" : "Row Count"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.io.filehandling.pmml.reader.PMMLReaderNodeFactory3"
    },
    "successor" : {
      "factoryId" : "org.knime.ensembles.pmmlpredict3.PMMLPredictorNodeFactory3"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "ANOVA tests"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.column.renamer.ColumnRenamerNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend2.ColumnAppender2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.writer.ExcelTableWriterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.meta.looper.chunk.LoopStartChunkNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.js.base.node.viz.pagedTable.PagedTableViewNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.textprocessing.nodes.transformation.stringstodocument.StringsToDocumentNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.textprocessing.nodes.preprocessing.puncterasure.PunctuationErasureNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.datageneration.counter.CounterGenerationNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeOutputNodeFactory#Component Output"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.columnappend.ColumnAppenderNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.ungroup.UngroupNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "spike test"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.views.node.barchart.BarChartNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.rules.engine.RuleEngineVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.manualif.ManualIfNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endif.EndifNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "find spikey histogram"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.variabletotablerow2.VariableToTable2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "count" : 8
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.column.DataColumnSpecFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.columnlist2.ColumnListLoopStartNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.groupby.GroupByNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable3.TableToVariable3NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.json.node.totable.JSONToTableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.time.node.convert.stringtodatetime.StringToDateTimeNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factory" : "MetaNode",
      "name" : "Product Infos / Association Rules"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Top 2 Rules"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Refine"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.valuelookup.ValueLookupNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner3.Joiner3NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.partition.PartitionNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factoryId" : "org.knime.base.node.io.filehandling.csv.reader.CSVTableReaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.column.renamer.ColumnRenamerNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.reader.ExcelTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.valuelookup.ValueLookupNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.pmml.missingval.compute.MissingValueHandlerNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.transpose.TransposeTableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.split2.SplitNodeFactory2"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "Activate Numerical Analysis"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.autobinner3.AutoBinnerLearnNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.sorter.SorterNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.filter.row.RowFilterNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.mine.decisiontree2.predictor2.DecTreePredictorNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.meta.xvalidation.AggregateOutputNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.mine.scorer.accuracy.AccuracyScorer2NodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeInputNodeFactory#Component Input"
    },
    "node" : {
      "factoryId" : "org.knime.js.base.node.configuration.filter.column.ColumnFilterDialogNodeFactory2"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.columnheaderextract.ColumnHeaderExtractorNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.filehandling.utility.nodes.stringtopath.variable.StringToPathVariableNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.writer.ExcelTableWriterNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsWithOptionalInNodeFactory"
    },
    "node" : {
      "factory" : "MetaNode",
      "name" : "unique flow variables"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.endcase.EndcaseNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.ext.jep.JEPNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : null,
    "node" : {
      "factory" : "MetaNode",
      "name" : "Product Infos / Association Rules"
    },
    "successor" : {
      "factory" : "MetaNode",
      "name" : "Top 2 Rules"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.js.base.node.quickform.input.date2.DateInput2QuickFormNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.jsnippet.JavaEditVarNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.stringmanipulation.variable.StringManipulationVariableNodeFactory"
    },
    "count" : 2
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.columnmerge.ColumnMergerNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.colconvert.stringtonumber2.StringToNumber2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.valuelookup.ValueLookupNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.ext.poi3.node.io.filehandling.excel.reader.ExcelTableReaderNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.rowtocolumnheader.RowToColumnHeaderNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.table.splitter.TableSplitterNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.switches.emptytableswitch.EmptyTableSwitchNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.flowvariable.tablerowtovariable.TableToVariableNodeFactory"
    },
    "count" : 1
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.meta.looper.LoopEndJoin2NodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.constantvalue.ConstantValueColumnNodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rowkey2.RowKeyNodeFactory2"
    },
    "count" : 4
  }, {
    "predecessor" : {
      "factoryId" : "org.knime.base.node.preproc.append.row.AppendedRowsNodeFactory"
    },
    "node" : {
      "factoryId" : "org.knime.base.node.preproc.joiner.Joiner2NodeFactory"
    },
    "successor" : {
      "factoryId" : "org.knime.base.node.preproc.rename.RenameNodeFactory"
    },
    "count" : 4
  } ],
  "version" : {
    "major" : 3,
    "minor" : 2,
    "revision" : 0,
    "qualifier" : ""
  }
}